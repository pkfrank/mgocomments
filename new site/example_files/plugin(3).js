(function(){'use strict';CKEDITOR.plugins.add('embedsemantic',{icons:'embedsemantic',hidpi:true,requires:'embedbase',onLoad:function(){this.registerOembedTag();},init:function(editor){var widgetDefinition=CKEDITOR.plugins.embedBase.createWidgetBaseDefinition(editor),origInit=widgetDefinition.init;CKEDITOR.tools.extend(widgetDefinition,{dialog:'embedBase',button:editor.lang.embedbase.button,allowedContent:'oembed',requiredContent:'oembed',styleableElements:'oembed',providerUrl:new CKEDITOR.template(editor.config.embed_provider||'//ckeditor.iframe.ly/api/oembed?url={url}&callback={callback}'),init:function(){var that=this;origInit.call(this);this.once('ready',function(){if(this.data.loadOnReady){this.loadContent(this.data.url,{callback:function(){that.setData('loadOnReady',false);editor.fire('updateSnapshot');}});}});},upcast:function(element,data){if(element.name!='oembed'){return;}
var text=element.children[0],div;if(text&&text.type==CKEDITOR.NODE_TEXT&&text.value){data.url=text.value;data.loadOnReady=true;div=new CKEDITOR.htmlParser.element('div');element.replaceWith(div);div.attributes['class']=element.attributes['class'];return div;}},downcast:function(element){var ret=new CKEDITOR.htmlParser.element('oembed');ret.add(new CKEDITOR.htmlParser.text(this.data.url));if(element.attributes['class']){ret.attributes['class']=element.attributes['class'];}
return ret;}},true);editor.widgets.add('embedSemantic',widgetDefinition);},registerOembedTag:function(){var dtd=CKEDITOR.dtd,name;dtd.oembed={'#':1};for(name in dtd){if(dtd[name].div){dtd[name].oembed=1;}}}});})();